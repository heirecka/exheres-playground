# Copyright 2012 Heiko Becker <heiko@shruuf.de>
# Distributed under the terms of the GNU General Public License v2

require gnu [ pn=commoncpp pnv=${PNV} suffix=gz ]

SUMMARY="A portable class framework for writing C++ applications"
DESCRIPTION="GNU Common C++ is a portable and highly optimized class framework for writing C++
applications that need to use threads and support concurrent sychronization, and that use sockets,
XML parsing, serialization, config files, thread-optimized String and data structure classes, etc.
This framework offers a class foundation that hides platform differences from your C++ application
so that you need not write platform specific code. GNU Common can also be used to construct
embedded applications as part of GNU Telephony Open Embedded."

REMOTE_IDS="freshmeat:${PN}"

LICENCES="GPL-2"
SLOT="0"
PLATFORMS="~amd64"
MYOPTIONS="
    doc
    gnutls [[ description = [ Use GnuTLS instead of OpenSSL ] ]]
"

DEPENDENCIES="
    build:
        doc? ( app-doc/doxygen )
    build+run:
       !gnutls? ( dev-libs/openssl )
        gnutls? (
            dev-libs/gnutls
            dev-libs/libgcrypt
        )
    test:
        dev-cpp/cppunit
"

BUGS_TO="heiko@shruuf.de"

DEFAULT_SRC_PREPARE_PATCHES=( -p2 "${FILES}"/${PNV}-glibc2.12.patch )

DEFAULT_SRC_CONFIGURE_PARAMS=( --without-nat --with-ipv6 )
DEFAULT_SRC_CONFIGURE_OPTION_WITHS=(
    gnutls
    '!gnutls openssl'
)

DEFAULT_SRC_COMPILE_PARAMS=( '-j1' )

src_prepare() {
    default
    option doc || edo sed -i "s/^DOXYGEN=.*/DOXYGEN=no/" configure
}

src_compile() {
    default
    if expecting_tests --any; then
        edo pushd "${WORK}"/tests
        emake
        edo popd
    fi
}

src_test() {
    edo pushd "${WORK}"/tests
    # disable test thread1 becauses it runs indefinitely...
    edo sed -e 's/bug1 bug2 thread1 digest tcpstr1 url1/bug1 bug2 digest tcpstr1 url1/' \
            -i dotests.sh
    # ... remove the expected output
    edo sed -e '7,46d' -i output.txt
    edo sh test.sh
    edo popd
}

src_install() {
    default

    if option doc; then
        docinto html
        dodoc "${WORK}"/doc/html/*
    fi
}

